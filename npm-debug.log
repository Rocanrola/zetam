0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@1.4.9
3 info using node@v0.10.28
4 verbose publish [ '.' ]
5 verbose cache add [ '.', null ]
6 verbose cache add name=undefined spec="." args=[".",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: '.',
7 verbose parsed url   path: '.',
7 verbose parsed url   href: '.' }
8 silly lockFile 3a52ce78- .
9 verbose lock . /Users/mzapaia/.npm/3a52ce78-.lock
10 verbose tar pack [ '/var/folders/_j/4v1cfjpd0tx7sv_wr427m8vw0000gn/T/npm-14981-QfN-_JaQ/1422477307403-0.618333556689322/tmp.tgz',
10 verbose tar pack   '.' ]
11 verbose tarball /var/folders/_j/4v1cfjpd0tx7sv_wr427m8vw0000gn/T/npm-14981-QfN-_JaQ/1422477307403-0.618333556689322/tmp.tgz
12 verbose folder .
13 info prepublish zetam@0.2.80
14 silly lockFile 1f1177db-tar tar://.
15 verbose lock tar://. /Users/mzapaia/.npm/1f1177db-tar.lock
16 silly lockFile 0d13d35a-307403-0-618333556689322-tmp-tgz tar:///var/folders/_j/4v1cfjpd0tx7sv_wr427m8vw0000gn/T/npm-14981-QfN-_JaQ/1422477307403-0.618333556689322/tmp.tgz
17 verbose lock tar:///var/folders/_j/4v1cfjpd0tx7sv_wr427m8vw0000gn/T/npm-14981-QfN-_JaQ/1422477307403-0.618333556689322/tmp.tgz /Users/mzapaia/.npm/0d13d35a-307403-0-618333556689322-tmp-tgz.lock
18 silly lockFile 1f1177db-tar tar://.
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile 0d13d35a-307403-0-618333556689322-tmp-tgz tar:///var/folders/_j/4v1cfjpd0tx7sv_wr427m8vw0000gn/T/npm-14981-QfN-_JaQ/1422477307403-0.618333556689322/tmp.tgz
21 silly lockFile 0d13d35a-307403-0-618333556689322-tmp-tgz tar:///var/folders/_j/4v1cfjpd0tx7sv_wr427m8vw0000gn/T/npm-14981-QfN-_JaQ/1422477307403-0.618333556689322/tmp.tgz
22 verbose tar unpack /var/folders/_j/4v1cfjpd0tx7sv_wr427m8vw0000gn/T/npm-14981-QfN-_JaQ/1422477307403-0.618333556689322/tmp.tgz
23 silly lockFile 6e358a7f-mzapaia-npm-zetam-0-2-80-package tar:///Users/mzapaia/.npm/zetam/0.2.80/package
24 verbose lock tar:///Users/mzapaia/.npm/zetam/0.2.80/package /Users/mzapaia/.npm/6e358a7f-mzapaia-npm-zetam-0-2-80-package.lock
25 silly lockFile 0d13d35a-307403-0-618333556689322-tmp-tgz tar:///var/folders/_j/4v1cfjpd0tx7sv_wr427m8vw0000gn/T/npm-14981-QfN-_JaQ/1422477307403-0.618333556689322/tmp.tgz
26 verbose lock tar:///var/folders/_j/4v1cfjpd0tx7sv_wr427m8vw0000gn/T/npm-14981-QfN-_JaQ/1422477307403-0.618333556689322/tmp.tgz /Users/mzapaia/.npm/0d13d35a-307403-0-618333556689322-tmp-tgz.lock
27 silly gunzTarPerm modes [ '755', '644' ]
28 silly gunzTarPerm extractEntry package.json
29 silly gunzTarPerm extractEntry .npmignore
30 silly gunzTarPerm extractEntry README.md
31 silly gunzTarPerm extractEntry LICENSE
32 silly gunzTarPerm extractEntry component.js
33 silly gunzTarPerm extractEntry page.js
34 silly gunzTarPerm extractEntry gulp.js
35 silly gunzTarPerm extractEntry index.js
36 silly gunzTarPerm extractEntry load.js
37 silly gunzTarPerm extractEntry module.js
38 silly gunzTarPerm extractEntry utils.js
39 silly gunzTarPerm extractEntry middleware.js
40 silly gunzTarPerm extractEntry controllers/components.js
41 silly gunzTarPerm extractEntry pages/components/controller.js
42 silly gunzTarPerm extractEntry pages/components/i18n.json
43 silly gunzTarPerm extractEntry pages/components/template.html
44 silly gunzTarPerm extractEntry pull.sh
45 silly gunzTarPerm extractEntry push.sh
46 silly lockFile 6e358a7f-mzapaia-npm-zetam-0-2-80-package tar:///Users/mzapaia/.npm/zetam/0.2.80/package
47 silly lockFile 6e358a7f-mzapaia-npm-zetam-0-2-80-package tar:///Users/mzapaia/.npm/zetam/0.2.80/package
48 silly lockFile 0d13d35a-307403-0-618333556689322-tmp-tgz tar:///var/folders/_j/4v1cfjpd0tx7sv_wr427m8vw0000gn/T/npm-14981-QfN-_JaQ/1422477307403-0.618333556689322/tmp.tgz
49 silly lockFile 0d13d35a-307403-0-618333556689322-tmp-tgz tar:///var/folders/_j/4v1cfjpd0tx7sv_wr427m8vw0000gn/T/npm-14981-QfN-_JaQ/1422477307403-0.618333556689322/tmp.tgz
50 silly lockFile 3a52ce78- .
51 silly lockFile 3a52ce78- .
52 silly publish { name: 'zetam',
52 silly publish   description: '(In progress)',
52 silly publish   version: '0.2.80',
52 silly publish   engines: { node: '>0.10.1' },
52 silly publish   author: { name: 'Marcelo Zapaia' },
52 silly publish   repository: { type: 'git', url: 'https://github.com/qzapaia/zetam.git' },
52 silly publish   keywords: [ 'express', 'web', 'framework', 'zeta' ],
52 silly publish   main: 'index.js',
52 silly publish   license: 'ISC',
52 silly publish   dependencies:
52 silly publish    { async: '^0.9.0',
52 silly publish      browserify: '^5.11.0',
52 silly publish      cheerio: '^0.17.0',
52 silly publish      gulp: '^3.8.5',
52 silly publish      'gulp-autoprefixer': '0.0.8',
52 silly publish      'gulp-less': '^1.2.4',
52 silly publish      'gulp-livereload': '^2.1.0',
52 silly publish      'gulp-load-plugins': '^0.5.3',
52 silly publish      'gulp-minify-css': '^0.3.10',
52 silly publish      'gulp-nodemon': '^1.0.4',
52 silly publish      'gulp-plumber': '^0.6.3',
52 silly publish      'gulp-rename': '^1.2.0',
52 silly publish      'gulp-uglify': '^1.0.1',
52 silly publish      'gulp-watch': '^0.6.8',
52 silly publish      'html-minifier': '^0.6.5',
52 silly publish      mustache: '^0.8.2',
52 silly publish      'vinyl-transform': '0.0.1' },
52 silly publish   readmeFilename: 'README.md',
52 silly publish   readme: 'Zetam\n-----\nZetam is a middleware for express that makes frontend development easy. It\'s based on two basic concepts: Pages and Components\n\nInstall\n-----------\n\n```sh\nnpm install zetam\n```\n\nYO Generator\n----------\nTo start a basic project use the Yeoman generator: https://www.npmjs.org/package/generator-zetam\n\n\n```sh\n# install yeoman, zetam generator and gulp globally\nnpm install -g yo generator-zetam gulp\n\n# init a new project\nyo zetam\n\n# run gulp\ngulp\n```\n\nPages & Components\n----------\nPages and components are pretty the same thing. The main difference is the use. Pages are better for layouts with just few logic. In the other hand, components are very useful for complex and reusable logic pieces ("widgets"). Both have the same structure:\n\n - **controller.js** Server side logic. Defines the model to be passed to the template\n - **template.html** Mustache template, receives model, i18n and config objects\n - **i18n.json** it\'s passed to the template like a **i18n** object\n - **view.js** Client side logic (Common JS module by Browserify - http://browserify.org/)\n - **styles.less** CSS styles by less\n\nView.js and styles.less are compiled by a gulp task. (http://gulpjs.com/) \n\nMiddleware\n----------\nIn order to use zetam, just plug the middleware into your Express project (http://expressjs.com/)\n\n```js\n// projectDir/app.js\nvar express = require(\'express\');\nvar app = express();\nvar z = require(\'zetam\');\n\napp.use(express.static(__dirname + \'/public\'));\n\n// the potato\napp.use(z.middleware);\n\napp.listen(3000,function () {\n\tconsole.log(\'running on port \' + port);\n});\n```\n\nPages\n----------\nPages are controllers too. These are automatically loaded by zetam middleware. Just create a page folder inside the **pages** directory.\n\n\tprojectDir > pages > myFirstPage\n\nCreate at least the controller and the template files and browse:\n\nhttp://localhost:3000/myFirstPage\n\nPage files structure:\n\n - projectDir\n\t - pages\n\t\t - myFirstPage\n\t\t\t - controller.js\n\t\t\t - template.html\n\t\t\t - i18n.json\n\t\t\t - view.js\n\t\t\t - styles.less\n\nPages can be created running a yeoman command:\n```sh\nyo zetam:page\n```\n\nComponents\n----------\nComponents are loaded using an HTML tag inside any template with the **data-component** attribute.\n\n```html\n<!-- projectDir/pages/myFirstPage/template.html -->\n<h1>A title</h1>\n<div data-component="coolComponent" data-lastname="Smith"></div>\n```\n\nComponents files structure:\n\n - projectDir\n\t - components\n\t\t - coolComponent\n\t\t\t - controller.js\n\t\t\t - template.html\n\t\t\t - i18n.json\n\t\t\t - view.js\n\t\t\t - styles.less\n\nit\'s possible create a new component running a yeoman command:\n```sh\nyo zetam:component\n```\n\nControllers (controller.js)\n----------\n\nPages and components has controllers to set the model to be passed to the template. In the case of Pages the method to be executed is the http verb used to request the page.\n\nControllers receive three parameter:\n\n - config: In the case of components, config are all the attributes of the HTML tag , and also receive the inner html content. In the case of pages is req.config +  query parameters\n - req: express request object\n - cb : callback(error,response). The response could be an empty object, or it can has the model to be passed to the template\n\nExample: If the request is a POST request to http://localhost:3000/myFirstPage the way to handle this is:\n\nPage:\n\n```js\n// projectDir/pages/myFirstPage/controller.js\n\nexports.post = function(config,req,cb){\n\t// config has basic info + req.config + query string parameters\n\tconsole.log(req.resource)\n\tcb(null,{\n\t\tmodel:{\n\t\t\tname:\'John\'\n\t\t}\n\t});\n}\n\n```\n\nThere is also a **req.resource** special object inside **req** that is generated by Zetam. This describe all the pathname in a tree way. Example:\n\nFor the url:\n\nhttp://localhost:3000/myFirstPage/1234/section/9898\n\n```js\n///req.resource Object\n{\n\tname:"myFirstPage",\n\tid:"1234",\n\tsubresource:{\n\t\tname:"section",\n\t\tid:9898\n\t}\n}\n```\n\n\nIn the case of components included by a HTML tag, the method is always **init** method.\n\nComponent:\n```js\n// projectDir/components/coolComponent/controller.js\n\nexports.init = function(config,req,cb){\n\t// in this case config receive all the attributes\n\t// For example, if the tag would be \n\t// <div data-component="coolComponent" data-extra="great"></div>\n\t// config would have an data-extra atribute\n\t// config also receives an innerHTML attribute\n\t\n\tcb(null,{\n\t\tmodel:{\n\t\t\tname:\'John\',\n\t\t\tlastname:config[\'data-lastname\']\n\t\t}\n\t});\n}\n\n```\nComponents can also send a second parameter in order to override some config options, for example: the template name.\n\n```js\n// projectDir/components/coolComponent/controller.js\n\nexports.init = function(config,req,cb){\n\tcb(null,{\n\t\tmodel:{\n\t\t\tname:\'John\',\n\t\t\tlastname:config[\'data-lastname\']\n\t\t},\n\t\tconfig:{\n\t\t\t\'data-template\':\'otherTemplate\'\n\t\t}\n\t});\n}\n\n```\n\nThis tells zetam use **otherTemplate.html** instead the default **template.html** file inside the component directory.\n\n\ni18n (i18n.json)\n---------\ni18n.json file works with components and pages in the same way. In order to use it it\'s necesary set a **req.config.locale** variable before middleware loads. \n\n```js\n// projectDir/app.js\nvar express = require(\'express\');\nvar app = express();\nvar z = require(\'zetam\');\n\napp.use(express.static(__dirname + \'/public\'));\n\n// the potato\napp.use(function(req,res,next){\n\treq.config = { locale:\'ar\'}\n\tnext();\n});\n\napp.use(z.middleware);\n\napp.listen(3000,function () {\n\tconsole.log(\'running on port \' + port);\n});\n```\nInside the i18n.json file there would be to exist at least the **all**  object, it will be merged with the current locale object.\n\n```js\n// projectDir/components/coolComponent/i18n.json\n\n{\n\t"all":{\n\t\t"greeting": "Hi there",\n\t\t"goodbay": "Come back !"\n\t},\n\t"ar":{\n\t\t"greetings": "Hola, como estas?"\n\t}\n}\n\n```\n\nTemplates (template.html)\n---------\nReceives the model and the config objects from the controller. Also receives the i18n object.\n```html\n<!-- projectDir/pages/myFirstPage/template.html -->\n<h1>{{i18n.greeting}} my name is {{model.name}}</h1>\n\n<span>If this would be a component, this would be the component name: {{config.data-template}} and this would be a the data-lastname attribute of the component tag {{config.data-lastname}}</span>\n\n{{i18n.goodbay}}\n```\n\nGulp\n----------\nIn order to compile view.js and styles.less files into the **public** directory, use the gulp task provided:\n\n```js\nvar gulp = require(\'gulp\');\nvar z = require(\'zetam\');\n\n// this create a \'zetam\' task\nz.gulp(gulp);\n\ngulp.task(\'default\', [\'zetam\']);\n```\n\nAfter this several task are available, the default task (\'zetam\') is for development, it compiles an watch.\n\nThe is also **zetam-build**, this doesn\'t watch and minifies/uglifies everything.\n\n```sh\n# for dev\ngulp \n```\n\n\n```sh\n# for prod\ngulp zetam-build\n```\n\n\nMain Controllers (Alternative to Pages)\n---------\n\nThere is a more basic way to handle URLs: Main controllers\n\nExample: If the request is a GET request to http://localhost:3000/superCoolController the way to handle this is:\n\n```js\n// projectDir/controllers/superCoolController.js\n\nexports.get = function(req,res,next){\n\tres.json({hi:"world"});\n}\n\n```\nIt\'s basically is a middleware for an specific URL. If would be a Main controller and a Page with the same name , the controller will be loaded.',
52 silly publish   bugs: { url: 'https://github.com/qzapaia/zetam/issues' },
52 silly publish   homepage: 'https://github.com/qzapaia/zetam',
52 silly publish   _id: 'zetam@0.2.80',
52 silly publish   _shasum: '8229b6444cd4e20e11baabfedca916dafe8d89da',
52 silly publish   _from: '.' }
53 verbose url raw zetam
54 verbose url resolving [ 'https://registry.npmjs.org/', './zetam' ]
55 verbose url resolved https://registry.npmjs.org/zetam
56 info trying registry request attempt 1 at 17:35:07
57 http PUT https://registry.npmjs.org/zetam
58 http 500 https://registry.npmjs.org/zetam
59 info retry will retry, error on last attempt: Error: pound_internal_server_error : zetam
60 info trying registry request attempt 2 at 17:35:19
61 http PUT https://registry.npmjs.org/zetam
62 http 500 https://registry.npmjs.org/zetam
63 info retry will retry, error on last attempt: Error: pound_internal_server_error : zetam
64 info trying registry request attempt 3 at 17:36:21
65 http PUT https://registry.npmjs.org/zetam
66 http 500 https://registry.npmjs.org/zetam
67 verbose headers { date: 'Wed, 28 Jan 2015 20:35:49 GMT',
67 verbose headers   server: 'Apache',
67 verbose headers   'content-type': 'text/html',
67 verbose headers   expires: 'now',
67 verbose headers   pragma: 'no-cache',
67 verbose headers   'cache-control': 'max-age=0',
67 verbose headers   'content-length': '111',
67 verbose headers   'accept-ranges': 'bytes',
67 verbose headers   via: '1.1 varnish',
67 verbose headers   'x-served-by': 'cache-iad2129-IAD',
67 verbose headers   'x-cache': 'MISS',
67 verbose headers   'x-cache-hits': '0',
67 verbose headers   'x-timer': 'S1422477348.779706,VS0,VE509',
67 verbose headers   connection: 'close' }
68 error publish Failed PUT 500
69 error Error: pound_internal_server_error : zetam
69 error     at RegClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:273:14)
69 error     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:211:65)
69 error     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:123:22)
69 error     at Request.EventEmitter.emit (events.js:98:17)
69 error     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:893:14)
69 error     at Request.EventEmitter.emit (events.js:117:20)
69 error     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:844:12)
69 error     at IncomingMessage.EventEmitter.emit (events.js:117:20)
69 error     at _stream_readable.js:919:16
69 error     at process._tickCallback (node.js:419:13)
70 error If you need help, you may report this *entire* log,
70 error including the npm and node versions, at:
70 error     <http://github.com/npm/npm/issues>
71 error System Darwin 14.0.0
72 error command "node" "/usr/local/bin/npm" "publish"
73 error cwd /Users/mzapaia/src/zetam
74 error node -v v0.10.28
75 error npm -v 1.4.9
76 verbose exit [ 1, true ]
